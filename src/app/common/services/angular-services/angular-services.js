import angular from 'angular';

/**
 * Utility to combine the most common angular services into a single DI point to manager complex DI chains in features & components.
 */
export class AngularServices {

  /**
   * @param {$log} $log - Angular logging Service.
   * @param {$document} $document - Angular Document Service.
   * @param {$filter} $filter - Angular Filter Service.
   * @param {$http} $http - Angular HTTP Request Service.
   * @param {$interval} $interval - Angular Interval Service.
   * @param {$location} $location - Angular Location Service.
   * @param {$q} $q - Angular Promise Implementation Service.
   * @param {$rootScope} $rootScope - Angular RootScope Service.
   * @param {$timeout} $timeout - Angular Timeout Service.
   * @param {$window} $window - Angular Window Service.
   */
  constructor($log, $document, $filter, $http, $interval, $location, $q, $rootScope, $timeout, $window) {
    this.$log = $log.getInstance('AngularServices', true);
    this.$log.debug('constructor');

    this.$document = $document;
    this.$filter = $filter;
    this.$http = $http;
    this.$interval = $interval;
    this.$logger = $log;
    this.$location = $location;
    this.$q = $q;
    this.$rootScope = $rootScope;
    this.$timeout = $timeout;
    this.$window = $window;
  }

  /**
   * Returns a namespaced $log instance
   * @param {string} Name - Namespace to apply to all logs generated by $log instance.
   * @param {boolean} isEnabled - Determines if $log instance should output info.
   */
  getLogInstance(namespace, isEnabled) {
    return this.$logger.getInstance(namespace, isEnabled);
  }

}

AngularServices.$inject = ['$log', '$document', '$filter', '$http', '$interval', '$location', '$q', '$rootScope', '$timeout', '$window'];

//export angular module for integration into app
export default angular.module('app.common.services.AngularServices', [])
  .service('AngularServices', AngularServices);
